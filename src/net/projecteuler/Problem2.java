package net.projecteuler;

import java.util.ArrayList;
import java.util.List;

/**
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
	1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
	By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 *
 */
public class Problem2 {
	public static void main(String[] args) {
		System.out.println(normal());
	}

	public static long normal() {
		// 不超过4,000,000的fibonacci值中，偶数的和。遍历
		List<Long> list = new ArrayList<Long>();
		for(int i=0;;i++){
			long value = fib(i);
			if(value >= 4000000)
				break;
			else if(value % 2 !=0)
				continue ; 
			list.add(value);
		}
		long sum = 0;
		for(long l : list){
			sum += l;
		}
		return sum;
	}
	public static long fib(int n){
		if(n<2)
			return 1;
		else
			return fib(n-1)+fib(n-2);
	}
}
